{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/TodoBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoBox(input) {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const reverseCheck = () => {\n    setChecked(checked => !checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contentBox,\n    children: [input.checked === true ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: reverseCheck,\n      checked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: reverseCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.todoText,\n      children: input.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.todoIconX,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_s(TodoBox, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n_c = TodoBox;\nexport const MemoizedTodoBox = /*#__PURE__*/React.memo(TodoBox);\n_c2 = MemoizedTodoBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoBox\");\n$RefreshReg$(_c2, \"MemoizedTodoBox\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","TodoBox","input","_s","checked","setChecked","reverseCheck","className","contentBox","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","todoText","value","todoIconX","_c","MemoizedTodoBox","memo","_c2","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/TodoBox.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\n\nexport function TodoBox(input) {\n\tconst [checked, setChecked] = useState(false);\n\n\tconst reverseCheck = () => {\n\t\tsetChecked((checked) => !checked);\n\t};\n\n\treturn (\n\t\t<div className={styles.contentBox}>\n\t\t\t{input.checked === true ? (\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={reverseCheck}\n\t\t\t\t\tchecked\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={reverseCheck}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<div className={styles.todoText}>\n\t\t\t\t{input.value}\n\t\t\t\t</div>\n\t\t\t<div className={styles.todoIconX}>‚ùå</div>\n\t\t</div>\n\t);\n}\n\nexport const MemoizedTodoBox = React.memo(TodoBox);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IAC1BD,UAAU,CAAED,OAAO,IAAK,CAACA,OAAO,CAAC;EAClC,CAAC;EAED,oBACCJ,OAAA;IAAKO,SAAS,EAAET,MAAM,CAACU,UAAW;IAAAC,QAAA,GAChCP,KAAK,CAACE,OAAO,KAAK,IAAI,gBACtBJ,OAAA;MACCU,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEL,YAAa;MACtBF,OAAO;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,gBAEFf,OAAA;MACCU,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACD,eACDf,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACkB,QAAS;MAAAP,QAAA,EAC9BP,KAAK,CAACe;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPf,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACoB,SAAU;MAAAT,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAER;AAACZ,EAAA,CA3BeF,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AA6BvB,OAAO,MAAMmB,eAAe,gBAAGxB,KAAK,CAACyB,IAAI,CAACpB,OAAO,CAAC;AAACqB,GAAA,GAAtCF,eAAe;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}