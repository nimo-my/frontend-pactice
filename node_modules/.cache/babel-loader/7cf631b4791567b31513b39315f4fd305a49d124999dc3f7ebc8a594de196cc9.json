{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useState\n  const [input, setInput] = useState(\"\");\n  const [todoList, setTodoList] = useState(storeTodoList);\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const makeTodoBox = () => {\n    if (input.trim() !== \"\") {\n      setTodoList([...todoList, {\n        id: Date.now(),\n        content: input,\n        checked: false\n      } // 새 항목은 기본적으로 unchecked\n      ]);\n      setInput(\"\"); // 입력 필드 초기화\n    }\n  };\n  const changeCheckBox = id => {\n    // 불변성 원칙에 따라 todoList 업데이트\n    setTodoList(todoList.map(todoList => todoList.id === id ? {\n      ...todoList,\n      checked: !todoList.checked\n    } : todoList // id가 일치하는 항목의 checked 값을 토글\n    ));\n  };\n  function deleteTodoList(id) {\n    // 삭제된 새로운 todoList로 업데이트\n    const updatedTodoList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedTodoList); // 상태 업데이트\n  }\n\n  // for storing(1)\n  function storeTodoList() {\n    const todoList = localStorage.getItem(\"todoList\");\n    return todoList ? JSON.parse(todoList) : [];\n  }\n  function getTodoList(todoList) {\n    return localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }\n\n  // for storing(2)\n  useEffect(() => {\n    getTodoList(todoList);\n    // console.log(todoList); //NOTE - for debug\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-input-wrapper\",\n      style: {\n        display: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: onInputChange,\n        className: styles.inputWrapper,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") makeTodoBox();\n        },\n        placeholder: \"Write down your new TODOs! :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeTodoBox,\n        className: styles.postButton,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(MemoizedTodoBox, {\n      // 고유식별번호(꼭 넣어줘야함!!)\n      id: todo.id // id 전달\n      ,\n      value: todo.content,\n      checked: todo.checked // checked 상태 전달\n      ,\n      changeCheckBox: changeCheckBox // 함수 전달\n      ,\n      deleteTodoList: deleteTodoList // 함수 전달\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"HOON9g9T0ckh6LrEdAVPl9AGZCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","styles","jsxDEV","_jsxDEV","App","_s","input","setInput","todoList","setTodoList","storeTodoList","onInputChange","e","target","value","makeTodoBox","trim","id","Date","now","content","checked","changeCheckBox","map","deleteTodoList","updatedTodoList","filter","todo","localStorage","getItem","JSON","parse","getTodoList","setItem","stringify","className","app","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","inputWrapper","onKeyDown","key","placeholder","onClick","postButton","_c","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState(storeTodoList);\n\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\tsetTodoList([\n\t\t\t\t...todoList,\n\t\t\t\t{ id: Date.now(), content: input, checked: false }, // 새 항목은 기본적으로 unchecked\n\t\t\t]);\n\t\t\tsetInput(\"\"); // 입력 필드 초기화\n\t\t}\n\t};\n\n\tconst changeCheckBox = (id) => {\n\t\t// 불변성 원칙에 따라 todoList 업데이트\n\t\tsetTodoList(\n\t\t\ttodoList.map(\n\t\t\t\t(todoList) =>\n\t\t\t\t\ttodoList.id === id\n\t\t\t\t\t\t? { ...todoList, checked: !todoList.checked }\n\t\t\t\t\t\t: todoList // id가 일치하는 항목의 checked 값을 토글\n\t\t\t)\n\t\t);\n\t};\n\n\tfunction deleteTodoList(id) {\n\t\t// 삭제된 새로운 todoList로 업데이트\n\t\tconst updatedTodoList = todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(updatedTodoList); // 상태 업데이트\n\t}\n\n\t// for storing(1)\n\tfunction storeTodoList() {\n\t\tconst todoList = localStorage.getItem(\"todoList\");\n\t\treturn todoList ? JSON.parse(todoList) : [];\n\t}\n\n\tfunction getTodoList(todoList) {\n\t\treturn localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n\t}\n\n\t// for storing(2)\n\tuseEffect(() => {\n\t\tgetTodoList(todoList);\n\t\t// console.log(todoList); //NOTE - for debug\n\t}, [todoList]);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\tclassName={styles.inputWrapper}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === \"Enter\") makeTodoBox();\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"Write down your new TODOs! :)\"\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={makeTodoBox}\n\t\t\t\t\tclassName={styles.postButton}>\n\t\t\t\t\tpost\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t{todoList.map((todo) => (\n\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\tkey={todo.id} // 고유식별번호(꼭 넣어줘야함!!)\n\t\t\t\t\tid={todo.id} // id 전달\n\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\tchecked={todo.checked} // checked 상태 전달\n\t\t\t\t\tchangeCheckBox={changeCheckBox} // 함수 전달\n\t\t\t\t\tdeleteTodoList={deleteTodoList} // 함수 전달\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}