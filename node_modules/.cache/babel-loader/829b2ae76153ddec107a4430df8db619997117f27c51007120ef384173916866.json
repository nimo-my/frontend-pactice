{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox, TodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useState\n  const [input, setInput] = useState(\"\");\n  const [todoList, setTodoList] = useState();\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const makeTodoBox = () => {\n    if (input.trim() !== \"\") {\n      setTodoList([...todoList, {\n        id: Date.now(),\n        content: input,\n        checked: false\n      } // 새 항목은 기본적으로 unchecked\n      ]);\n      setInput(\"\"); // 입력 필드 초기화\n    }\n  };\n  const storeDataInLocalStorage = todos => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todos)); // 로컬스토리지에 저장\n  };\n  const changeCheckBox = id => {\n    // 불변성 원칙에 따라 todoList 업데이트\n    setTodoList(todoList.map(todoList => todoList.id === id ? {\n      ...todoList,\n      checked: !todoList.checked\n    } : todoList // id가 일치하는 항목의 checked 값을 토글\n    ));\n    storeDataInLocalStorage(todoList);\n  };\n  async function deleteTodoList(id) {\n    // 삭제된 새로운 todoList로 업데이트\n    const updatedTodoList = await todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedTodoList); // 상태 업데이트\n    storeDataInLocalStorage(updatedTodoList);\n  }\n\n  // for storing(1)\n  async function getTodoListFromStorage() {\n    const todoList = await localStorage.getItem(\"todoList\");\n    return todoList ? JSON.parse(todoList) : [];\n  }\n\n  // for storing(2)\n  useEffect(() => {\n    console.log(\"console log :: \", todoList); //NOTE - for debug\n    storeDataInLocalStorage(todoList);\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-input-wrapper\",\n      style: {\n        display: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: onInputChange,\n        className: styles.inputWrapper,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") makeTodoBox();\n        },\n        placeholder: \"Write down your new TODOs! :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeTodoBox,\n        className: styles.postButton,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), todoList.length === 0 ? todoList.map(todo => /*#__PURE__*/_jsxDEV(MemoizedTodoBox, {\n      // 고유식별번호(꼭 넣어줘야함!!)\n      id: todo.id // id 전달\n      ,\n      value: todo.content,\n      checked: todo.checked // checked 상태 전달\n      ,\n      changeCheckBox: changeCheckBox // 함수 전달\n      ,\n      deleteTodoList: deleteTodoList // 함수 전달\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"kKyeWZ6zDixnYJ4Q2LUBC99QEQI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","TodoBox","styles","jsxDEV","_jsxDEV","App","_s","input","setInput","todoList","setTodoList","onInputChange","e","target","value","makeTodoBox","trim","id","Date","now","content","checked","storeDataInLocalStorage","todos","localStorage","setItem","JSON","stringify","changeCheckBox","map","deleteTodoList","updatedTodoList","filter","todo","getTodoListFromStorage","getItem","parse","console","log","className","app","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","inputWrapper","onKeyDown","key","placeholder","onClick","postButton","length","_c","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox, TodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState();\n\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\tsetTodoList([\n\t\t\t\t...todoList,\n\t\t\t\t{ id: Date.now(), content: input, checked: false }, // 새 항목은 기본적으로 unchecked\n\t\t\t]);\n\t\t\tsetInput(\"\"); // 입력 필드 초기화\n\t\t}\n\t};\n\n\tconst storeDataInLocalStorage = (todos) => {\n\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(todos)); // 로컬스토리지에 저장\n\t};\n\n\tconst changeCheckBox = (id) => {\n\t\t// 불변성 원칙에 따라 todoList 업데이트\n\t\tsetTodoList(\n\t\t\ttodoList.map(\n\t\t\t\t(todoList) =>\n\t\t\t\t\ttodoList.id === id\n\t\t\t\t\t\t? { ...todoList, checked: !todoList.checked }\n\t\t\t\t\t\t: todoList // id가 일치하는 항목의 checked 값을 토글\n\t\t\t)\n\t\t);\n\t\tstoreDataInLocalStorage(todoList);\n\t};\n\n\tasync function deleteTodoList(id) {\n\t\t// 삭제된 새로운 todoList로 업데이트\n\t\tconst updatedTodoList = await todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(updatedTodoList); // 상태 업데이트\n\t\tstoreDataInLocalStorage(updatedTodoList);\n\t}\n\n\t// for storing(1)\n\tasync function getTodoListFromStorage() {\n\t\tconst todoList = await localStorage.getItem(\"todoList\");\n\t\treturn todoList ? JSON.parse(todoList) : [];\n\t}\n\n\t// for storing(2)\n\tuseEffect(() => {\n\t\tconsole.log(\"console log :: \", todoList); //NOTE - for debug\n\t\tstoreDataInLocalStorage(todoList);\n\t}, [todoList]);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\tclassName={styles.inputWrapper}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === \"Enter\") makeTodoBox();\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"Write down your new TODOs! :)\"\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={makeTodoBox}\n\t\t\t\t\tclassName={styles.postButton}>\n\t\t\t\t\tpost\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{todoList.length === 0\n\t\t\t\t? todoList.map((todo) => (\n\t\t\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\t\t\tkey={todo.id} // 고유식별번호(꼭 넣어줘야함!!)\n\t\t\t\t\t\t\tid={todo.id} // id 전달\n\t\t\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\t\t\tchecked={todo.checked} // checked 상태 전달\n\t\t\t\t\t\t\tchangeCheckBox={changeCheckBox} // 함수 전달\n\t\t\t\t\t\t\tdeleteTodoList={deleteTodoList} // 함수 전달\n\t\t\t\t\t\t/>\n\t\t\t\t  ))\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}