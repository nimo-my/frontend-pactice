{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  // useState\n  const [input, setInput] = useState(\"\");\n  const [todoList, setTodoList] = useState(storeTodoList);\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const makeTodoBox = () => {\n    if (input.trim() !== \"\") {\n      setTodoList([...todoList, {\n        id: todoList.length,\n        content: input,\n        checked: false\n      } // 새 항목은 기본적으로 unchecked\n      ]);\n      setInput(\"\"); // 입력 필드 초기화\n    }\n  };\n  const changeCheckBox = id => {\n    // 불변성 원칙에 따라 todoList 업데이트\n    setTodoList(todoList.map(todoList => todoList.id === id ? {\n      ...todoList,\n      checked: !todoList.checked\n    } : todoList // id가 일치하는 항목의 checked 값을 토글\n    ));\n  };\n  function deleteTodo(id) {\n    _s();\n    const [newList, setnewList] = useState([]);\n    todoList.map((value, idx) => {\n      console.log(value.id);\n      setnewList(todoList.filter(idx => idx !== value.id));\n    });\n    setTodoList(newList);\n    storeTodoList(newList);\n  }\n\n  // console.log(\"bb : \", newToDos);\n  // newToDos = newToDos.filter((e)=> e !== )\n  // setTodoList(newToDos);\n  // storeTodoList(newToDos);\n\n  // for storing(1)\n  _s(deleteTodo, \"3Y+bMmlMbWBHI/o5WhPaZLPAYAY=\");\n  function storeTodoList() {\n    const todoList = localStorage.getItem(\"todoList\");\n    return todoList ? JSON.parse(todoList) : [];\n  }\n\n  // for storing(2)\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    console.log(\"Updated todoList:\", todoList);\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-input-wrapper\",\n      style: {\n        display: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeTodoBox,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(MemoizedTodoBox, {\n      // 고유식별번호(꼭 넣어줘야함!!)\n      id: todo.id // id 전달\n      ,\n      value: todo.content,\n      checked: todo.checked // checked 상태 전달\n      ,\n      changeCheckBox: changeCheckBox // 함수 전달\n      ,\n      deleteTodoList: deleteTodoList // 함수 전달\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s2(App, \"HOON9g9T0ckh6LrEdAVPl9AGZCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","styles","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","input","setInput","todoList","setTodoList","storeTodoList","onInputChange","e","target","value","makeTodoBox","trim","id","length","content","checked","changeCheckBox","map","deleteTodo","newList","setnewList","idx","console","log","filter","localStorage","getItem","JSON","parse","setItem","stringify","className","app","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","onClick","todo","deleteTodoList","_c","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState(storeTodoList);\n\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\tsetTodoList([\n\t\t\t\t...todoList,\n\t\t\t\t{ id: todoList.length, content: input, checked: false }, // 새 항목은 기본적으로 unchecked\n\t\t\t]);\n\t\t\tsetInput(\"\"); // 입력 필드 초기화\n\t\t}\n\t};\n\n\tconst changeCheckBox = (id) => {\n\t\t// 불변성 원칙에 따라 todoList 업데이트\n\t\tsetTodoList(\n\t\t\ttodoList.map(\n\t\t\t\t(todoList) =>\n\t\t\t\t\ttodoList.id === id\n\t\t\t\t\t\t? { ...todoList, checked: !todoList.checked }\n\t\t\t\t\t\t: todoList // id가 일치하는 항목의 checked 값을 토글\n\t\t\t)\n\t\t);\n\t};\n\n\tfunction deleteTodo(id) {\n\t\tconst [newList, setnewList] = useState([])\n\t\ttodoList.map((value, idx) => {\n\t\t\tconsole.log(value.id);\n\t\t\tsetnewList(todoList.filter((idx) => idx !== value.id));\n\t\t});\n\t\tsetTodoList(newList);\n\t\tstoreTodoList(newList);\n\t}\n\n\t// console.log(\"bb : \", newToDos);\n\t// newToDos = newToDos.filter((e)=> e !== )\n\t// setTodoList(newToDos);\n\t// storeTodoList(newToDos);\n\n\t// for storing(1)\n\tfunction storeTodoList() {\n\t\tconst todoList = localStorage.getItem(\"todoList\");\n\t\treturn todoList ? JSON.parse(todoList) : [];\n\t}\n\n\n\t// for storing(2)\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(todoList));\n\t\tconsole.log(\"Updated todoList:\", todoList);\n\t}, [todoList]);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t/>\n\t\t\t\t<button onClick={makeTodoBox}>post</button>\n\t\t\t</div>\n\n\t\t\t{todoList.map((todo) => (\n\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\tkey={todo.id} // 고유식별번호(꼭 넣어줘야함!!)\n\t\t\t\t\tid={todo.id} // id 전달\n\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\tchecked={todo.checked} // checked 상태 전달\n\t\t\t\t\tchangeCheckBox={changeCheckBox} // 함수 전달\n\t\t\t\t\tdeleteTodoList={deleteTodoList} // 함수 전달\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}