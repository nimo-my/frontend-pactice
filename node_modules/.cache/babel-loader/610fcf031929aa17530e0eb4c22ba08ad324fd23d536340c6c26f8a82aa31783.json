{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useState\n  const [input, setInput] = useState(\"\");\n  const [todoList, setTodoList] = useState(() => {\n    // 초기값 설정 시 로컬스토리지에서 가져온 값으로 설정\n    const storedTodos = localStorage.getItem(\"todoList\");\n    return storedTodos ? JSON.parse(storedTodos) : [];\n  });\n\n  // 입력 필드 업데이트\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  // 새로운 TODO 생성\n  const makeTodoBox = () => {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        content: input,\n        checked: false\n      };\n      const updatedTodoList = [...todoList, newTodo];\n      setTodoList(updatedTodoList);\n      setInput(\"\"); // 입력 필드 초기화\n      localStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n    }\n  };\n\n  // 체크박스 상태 변경\n  const changeCheckBox = id => {\n    const updatedTodoList = todoList.map(todo => todo.id === id ? {\n      ...todo,\n      checked: !todo.checked\n    } : todo);\n    setTodoList(updatedTodoList);\n    localStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n  };\n\n  // TODO 삭제\n  const deleteTodoList = id => {\n    const updatedTodoList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedTodoList);\n    localStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n  };\n\n  // 처음 렌더링 시 로컬스토리지에서 데이터를 불러옴\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todoList\");\n    if (storedTodos) {\n      setTodoList(JSON.parse(storedTodos));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-input-wrapper\",\n      style: {\n        display: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: onInputChange,\n        className: styles.inputWrapper,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") makeTodoBox();\n        },\n        placeholder: \"Write down your new TODOs! :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeTodoBox,\n        className: styles.postButton,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), todoList.length === 0 ? todoList.map(todo => /*#__PURE__*/_jsxDEV(MemoizedTodoBox, {\n      // 고유식별번호(꼭 넣어줘야함!!)\n      id: todo.id // id 전달\n      ,\n      value: todo.content,\n      checked: todo.checked // checked 상태 전달\n      ,\n      changeCheckBox: changeCheckBox // 함수 전달\n      ,\n      deleteTodoList: deleteTodoList // 함수 전달\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"+hn4DEfnR/h6dhZlL6xhwCE71yc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","styles","jsxDEV","_jsxDEV","App","_s","input","setInput","todoList","setTodoList","storedTodos","localStorage","getItem","JSON","parse","onInputChange","e","target","value","makeTodoBox","trim","newTodo","id","Date","now","content","checked","updatedTodoList","setItem","stringify","changeCheckBox","map","todo","deleteTodoList","filter","className","app","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","inputWrapper","onKeyDown","key","placeholder","onClick","postButton","length","_c","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState(() => {\n\t\t// 초기값 설정 시 로컬스토리지에서 가져온 값으로 설정\n\t\tconst storedTodos = localStorage.getItem(\"todoList\");\n\t\treturn storedTodos ? JSON.parse(storedTodos) : [];\n\t});\n\n\t// 입력 필드 업데이트\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\t// 새로운 TODO 생성\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\tconst newTodo = { id: Date.now(), content: input, checked: false };\n\t\t\tconst updatedTodoList = [...todoList, newTodo];\n\n\t\t\tsetTodoList(updatedTodoList);\n\t\t\tsetInput(\"\"); // 입력 필드 초기화\n\t\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n\t\t}\n\t};\n\n\t// 체크박스 상태 변경\n\tconst changeCheckBox = (id) => {\n\t\tconst updatedTodoList = todoList.map((todo) =>\n\t\t\ttodo.id === id ? { ...todo, checked: !todo.checked } : todo\n\t\t);\n\t\tsetTodoList(updatedTodoList);\n\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n\t};\n\n\t// TODO 삭제\n\tconst deleteTodoList = (id) => {\n\t\tconst updatedTodoList = todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(updatedTodoList);\n\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(updatedTodoList)); // 로컬스토리지에 저장\n\t};\n\n\t// 처음 렌더링 시 로컬스토리지에서 데이터를 불러옴\n\tuseEffect(() => {\n\t\tconst storedTodos = localStorage.getItem(\"todoList\");\n\t\tif (storedTodos) {\n\t\t\tsetTodoList(JSON.parse(storedTodos));\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\tclassName={styles.inputWrapper}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === \"Enter\") makeTodoBox();\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"Write down your new TODOs! :)\"\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={makeTodoBox}\n\t\t\t\t\tclassName={styles.postButton}>\n\t\t\t\t\tpost\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{todoList.length === 0\n\t\t\t\t? todoList.map((todo) => (\n\t\t\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\t\t\tkey={todo.id} // 고유식별번호(꼭 넣어줘야함!!)\n\t\t\t\t\t\t\tid={todo.id} // id 전달\n\t\t\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\t\t\tchecked={todo.checked} // checked 상태 전달\n\t\t\t\t\t\t\tchangeCheckBox={changeCheckBox} // 함수 전달\n\t\t\t\t\t\t\tdeleteTodoList={deleteTodoList} // 함수 전달\n\t\t\t\t\t\t/>\n\t\t\t\t  ))\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}