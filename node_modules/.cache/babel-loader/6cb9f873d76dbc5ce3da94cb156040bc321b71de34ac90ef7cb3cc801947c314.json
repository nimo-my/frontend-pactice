{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용함\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // useState\n  const [input, setInput] = useState(\"\");\n  // for storing(3) : useState의 인자로 넣어주기\n  const [todoList, setTodoList] = useState(storeTodoList);\n  const [checkbox, setCheckBox] = useState(todoList.map(val => val.checked));\n  function changeCheckBox(id) {\n    console.log(\"check :: \", checkbox);\n    return setCheckBox(!id.checkbox);\n  }\n  const onInputChange = e => {\n    setInput(e.target.value);\n  };\n  const makeTodoBox = () => {\n    if (input.trim() !== \"\") {\n      setTodoList([...todoList, {\n        id: todoList.length,\n        content: input,\n        checked: false\n      }]);\n      setInput(\"\");\n    }\n  };\n\n  // for storing(1)\n  function storeTodoList() {\n    // local storage 에 저장\n    const todoList = localStorage.getItem(\"todoList\");\n    return todoList ? JSON.parse(todoList) : [];\n  }\n\n  // for storing(2)\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n  console.log(todoList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-input-wrapper\",\n      style: {\n        display: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeTodoBox,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), todoList.map(value =>\n    /*#__PURE__*/\n    // console.log(\"030 \",value)\n    _jsxDEV(MemoizedTodoBox, {\n      value: value.content,\n      checked: value.checked,\n      style: styles.contentBox,\n      input: value\n      // setInput={setInput}\n    }, value.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"J1S8gNwpL4BGhh30sMtV38j4/fs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","styles","jsxDEV","_jsxDEV","App","_s","input","setInput","todoList","setTodoList","storeTodoList","checkbox","setCheckBox","map","val","checked","changeCheckBox","id","console","log","onInputChange","e","target","value","makeTodoBox","trim","length","content","localStorage","getItem","JSON","parse","setItem","stringify","className","app","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","onClick","contentBox","_c","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\"; // memoized 사용함\nimport styles from \"./App.module.css\";\n\nfunction App() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\t// for storing(3) : useState의 인자로 넣어주기\n\tconst [todoList, setTodoList] = useState(storeTodoList);\n\n\tconst [checkbox, setCheckBox] = useState(todoList.map((val) => val.checked));\n\n\tfunction changeCheckBox(id) {\n\t\tconsole.log(\"check :: \", checkbox);\n\t\treturn setCheckBox(!id.checkbox);\n\t}\n\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\tsetTodoList([\n\t\t\t\t...todoList,\n\t\t\t\t{ id: todoList.length, content: input, checked: false },\n\t\t\t]);\n\t\t\tsetInput(\"\");\n\t\t}\n\t};\n\n\t// for storing(1)\n\tfunction storeTodoList() {\n\t\t// local storage 에 저장\n\t\tconst todoList = localStorage.getItem(\"todoList\");\n\t\treturn todoList ? JSON.parse(todoList) : [];\n\t}\n\n\t// for storing(2)\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(todoList));\n\t}, [todoList]);\n\n\tconsole.log(todoList);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t/>\n\t\t\t\t<button onClick={makeTodoBox}>post</button>\n\t\t\t</div>\n\n\t\t\t{todoList.map((value) => (\n\t\t\t\t// console.log(\"030 \",value)\n\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\tkey={value.id}\n\t\t\t\t\tvalue={value.content}\n\t\t\t\t\tchecked={value.checked}\n\t\t\t\t\tstyle={styles.contentBox}\n\t\t\t\t\tinput={value}\n\t\t\t\t\t// setInput={setInput}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}