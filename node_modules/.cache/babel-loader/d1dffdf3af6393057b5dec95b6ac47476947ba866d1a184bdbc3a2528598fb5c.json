{"ast":null,"code":"var _jsxFileName = \"/Users/nimo/Desktop/portfolio/react-web-service-prac/src/TodoBox.js\";\nimport React from \"react\";\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoBox({\n  checked,\n  id,\n  value,\n  changeCheckBox\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contentBox,\n    children: [checked === true ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => changeCheckBox(id),\n      checked: checked\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => changeCheckBox(id),\n      checked: checked\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: checked ? styles.done : styles.todoText,\n      children: value !== \"\" && value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.todoIconX,\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n_c = TodoBox;\nexport const MemoizedTodoBox = /*#__PURE__*/React.memo(TodoBox);\n_c2 = MemoizedTodoBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoBox\");\n$RefreshReg$(_c2, \"MemoizedTodoBox\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","TodoBox","checked","id","value","changeCheckBox","className","contentBox","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","done","todoText","todoIconX","_c","MemoizedTodoBox","memo","_c2","$RefreshReg$"],"sources":["/Users/nimo/Desktop/portfolio/react-web-service-prac/src/TodoBox.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./App.module.css\";\n\nexport function TodoBox({ checked, id, value, changeCheckBox }) {\n\treturn (\n\t\t<div className={styles.contentBox}>\n\t\t\t{checked === true ? (\n\t\t\t\t<input\n\t\t\t\t\tkey={id}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonChange={() => changeCheckBox(id)}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<input\n\t\t\t\t\tkey={id}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonChange={() => changeCheckBox(id)}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* warning 고치기 ) 초기값 설정 */}\n\n\t\t\t<div className={checked ? styles.done : styles.todoText}>\n\t\t\t\t{value !== \"\" && value}\n\t\t\t</div>\n\n\t\t\t<div className={styles.todoIconX}>❌</div>\n\t\t</div>\n\t);\n}\n\nexport const MemoizedTodoBox = React.memo(TodoBox);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,SAASC,OAAOA,CAAC;EAAEC,OAAO;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAe,CAAC,EAAE;EAC/D,oBACCL,OAAA;IAAKM,SAAS,EAAER,MAAM,CAACS,UAAW;IAAAC,QAAA,GAChCN,OAAO,KAAK,IAAI,gBAChBF,OAAA;MAECS,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAEA,CAAA,KAAML,cAAc,CAACF,EAAE,CAAE;MACnCD,OAAO,EAAEA;IAAQ,GAHZC,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIP,CAAC,gBAEFd,OAAA;MAECS,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAEA,CAAA,KAAML,cAAc,CAACF,EAAE,CAAE;MACnCD,OAAO,EAAEA;IAAQ,GAHZC,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIP,CACD,eAIDd,OAAA;MAAKM,SAAS,EAAEJ,OAAO,GAAGJ,MAAM,CAACiB,IAAI,GAAGjB,MAAM,CAACkB,QAAS;MAAAR,QAAA,EACtDJ,KAAK,KAAK,EAAE,IAAIA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAENd,OAAA;MAAKM,SAAS,EAAER,MAAM,CAACmB,SAAU;MAAAT,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAER;AAACI,EAAA,GA5BejB,OAAO;AA8BvB,OAAO,MAAMkB,eAAe,gBAAGtB,KAAK,CAACuB,IAAI,CAACnB,OAAO,CAAC;AAACoB,GAAA,GAAtCF,eAAe;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}